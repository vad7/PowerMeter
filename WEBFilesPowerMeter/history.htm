<!DOCTYPE html>
<html><head>
	<meta http-equiv="Content-type" content="text/html; charset=utf-8">
	<title>History</title>
	<link rel="stylesheet" href="/style.css">
</head>
<style>
svg {
	font: 8px sans-serif;
}
.area {
	fill: steelblue;
	clip-path: url(#clip);
}
.axis path,
.axis line {
	fill: none;
	stroke: #000;
	shape-rendering: crispEdges;
}
.brush .extent {
	stroke: #fff;
	fill-opacity: .125;
	shape-rendering: crispEdges;
}
</style>
<body>
~inc:menu0.inc~
<script src="http://d3js.org/d3.v3.min.js"></script>
<script>
var margin = {top: 10, right: 10, bottom: 80, left: 40},
	margin2 = {top: 150, right: 10, bottom: 20, left: 40},
	width = 640 - margin.left - margin.right,
	height = 200 - margin.top - margin.bottom,
	height2 = 200 - margin2.top - margin2.bottom;

var parseDate = d3.time.format("%Y-%m-%d %X").parse;

var customTimeFormat = d3.time.format.multi([
	[".%L", function(d) { return d.getMilliseconds(); }],
	[":%S", function(d) { return d.getSeconds(); }],
	["%H:%M", function(d) { return d.getMinutes(); }],
	["%H", function(d) { return d.getHours(); }],
	["%a %d", function(d) { return d.getDay() && d.getDate() != 1; }],
	["%b %d", function(d) { return d.getDate() != 1; }],
	["%B", function(d) { return d.getMonth(); }],
	["%Y", function() { return true; }]
]);

var x = d3.time.scale().range([0, width]),
	x2 = d3.time.scale().range([0, width]),
	y = d3.scale.linear().range([height, 0]),
	y2 = d3.scale.linear().range([height2, 0]);

var xAxis = d3.svg.axis().scale(x).tickFormat(customTimeFormat).orient("bottom"),
	xAxis2 = d3.svg.axis().scale(x2).tickFormat(customTimeFormat).orient("bottom"),
	yAxis = d3.svg.axis().scale(y).orient("left");

var brush = d3.svg.brush()
	.x(x2)
	.on("brush", brushed);

var area = d3.svg.area()
	.interpolate("linear")
	.x(function(d) { return x(d.date); })
	.y0(height)
	.y1(function(d) { return y(d.power); });

var area2 = d3.svg.area()
	.interpolate("linear")
	.x(function(d) { return x2(d.date); })
	.y0(height2)
	.y1(function(d) { return y2(d.power); });

var svg = d3.select("body").append("svg")
	.attr("width", width + margin.left + margin.right)
	.attr("height", height + margin.top + margin.bottom);

svg.append("defs").append("clipPath")
	.attr("id", "clip")
	.append("rect")
	.attr("width", width)
	.attr("height", height);

var focus = svg.append("g")
	.attr("class", "focus")
	.attr("transform", "translate(" + margin.left + "," + margin.top + ")");

var context = svg.append("g")
	.attr("class", "context")
	.attr("transform", "translate(" + margin2.left + "," + margin2.top + ")");

d3.csv("history.csv", type, function(error, data) {
	x.domain(d3.extent(data.map(function(d) { return d.date; })));
	y.domain([0, d3.max(data.map(function(d) { return d.power; }))]);
	x2.domain(x.domain());
	y2.domain(y.domain());

	focus.append("path")
		.datum(data)
		.attr("class", "area")
		.attr("d", area);
  
	focus.append("g")
		.attr("class", "x axis")
		.attr("transform", "translate(0," + height + ")")
		.call(xAxis);
  
	focus.append("g")
		.attr("class", "y axis")
		.call(yAxis);
  
	context.append("path")
		.datum(data)
		.attr("class", "area")
		.attr("d", area2);
  
	context.append("g")
		.attr("class", "x axis")
		.attr("transform", "translate(0," + height2 + ")")
		.call(xAxis2);
  
	context.append("g")
		.attr("class", "x brush")
		.call(brush)
		.selectAll("rect")
		.attr("y", -6)
		.attr("height", height2 + 7);
});
function brushed() {
	x.domain(brush.empty() ? x2.domain() : brush.extent());
	focus.select(".area").attr("d", area);
	focus.select(".x.axis").call(xAxis);
}
function type(d) {
	d.date = parseDate(d.date);
	d.power = +d.power;
	return d;
}
</script>
<br><br><br>
<form method="post" action="history.htm">
Max days: <input title='0 - all' name='ChartMaxDays' maxlength='10' value='~ChartMaxDays~'>
<input type='submit' value='Refresh' class="button">
</form>

<br>
<a href='history.csv'>Download history.csv</a><br>
<a href='/protect/fram_all.bin'>Download all FRAM memory</a><br>
</p></div>
~inc:footer.inc~
</body></html>